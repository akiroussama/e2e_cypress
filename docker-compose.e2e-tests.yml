services:
  testDB:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10
    tmpfs: /var/lib/postgresql
    ports:
      - 5432:5432

  backend:
    build: ./server
    ports:
      - 4000:4000
    volumes:
      - ./server/src:/app/src
    environment:
      DB_HOST: host.docker.internal
      CORS_ALLOWED_ORIGINS: http://host.docker.internal:3000,http://localhost:3000,http://localhost:8080
      SERVER_HOST: backend
    healthcheck:
      test: 'curl --fail --request GET -H ''content-type:application/json'' --url ''http://localhost:4000/graphql?query=%7B__typename%7D'''
      interval: 5s
      timeout: 5s
      retries: 10
    depends_on:
      testDB:
        condition: service_healthy
    extra_hosts:
    - "host.docker.internal:host-gateway"

  client:
    build: './client'
    ports:
      - 3000:3000
    volumes:
      - ./client/src:/app/src
    environment:
      REACT_APP_GRAPHQL_API_URL: 'http://host.docker.internal:4000'
    healthcheck:
      test: "curl --fail --request GET --url http://host.docker.internal:3000"
      interval: 5s
      timeout: 5s
      retries: 30
    extra_hosts:
    - "host.docker.internal:host-gateway"

  e2e:
    image: cypress
    build: ./e2e
    container_name: cypress
    depends_on:
      - client
    # note: inside e2e container, the network allows accessing
    # "web" host under name "web"
    # so "curl http://web" would return whatever the webserver
    # in the "web" container is cooking
    # see https://docs.docker.com/compose/networking/
    environment:
      - CYPRESS_baseUrl=http://host.docker.internal:3000
    command: npx cypress run
    # mount the host directory e2e/cypress and the file e2e/cypress.config.js as
    # volumes within the container
    # this means that:
    #  1. anything that Cypress writes to these folders (e.g., screenshots,
    #     videos) appears also on the Docker host's filesystem
    #  2. any change that the developer applies to Cypress files on the host
    #     machine immediately takes effect within the e2e container (no docker
    #     rebuild required).
    volumes:
      - ./e2e/cypress:/app/cypress
      - ./e2e/cypress.config.js:/app/cypress.config.js